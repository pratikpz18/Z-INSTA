[{"C:\\pratik web\\ping\\frontend\\src\\index.js":"1","C:\\pratik web\\ping\\frontend\\src\\App.js":"2","C:\\pratik web\\ping\\frontend\\src\\reportWebVitals.js":"3","C:\\pratik web\\ping\\frontend\\src\\components\\Dashboard.js":"4","C:\\pratik web\\ping\\frontend\\src\\components\\Login.js":"5","C:\\pratik web\\ping\\frontend\\src\\components\\Landing.js":"6","C:\\pratik web\\ping\\frontend\\src\\components\\Profile.js":"7","C:\\pratik web\\ping\\frontend\\src\\components\\Registration.js":"8","C:\\pratik web\\ping\\frontend\\src\\MessageBundle.js":"9","C:\\pratik web\\ping\\frontend\\src\\services\\LoginService.js":"10","C:\\pratik web\\ping\\frontend\\src\\services\\userservice.js":"11","C:\\pratik web\\ping\\frontend\\src\\services\\RegistrationService.js":"12","C:\\pratik web\\ping\\frontend\\src\\elements\\Message.js":"13","C:\\pratik web\\ping\\frontend\\src\\elements\\Error.js":"14","C:\\pratik web\\ping\\frontend\\src\\services\\auth-header.js":"15","C:\\pratik web\\ping\\frontend\\src\\services\\SearchService.js":"16","C:\\pratik web\\ping\\frontend\\src\\components\\SearchModal.js":"17","C:\\pratik web\\ping\\frontend\\src\\components\\Messages.js":"18","C:\\pratik web\\ping\\frontend\\src\\services\\messageservice.js":"19","C:\\pratik web\\ping\\frontend\\src\\components\\EditProfile.js":"20"},{"size":500,"mtime":1615645936351,"results":"21","hashOfConfig":"22"},{"size":1285,"mtime":1616418039399,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":2796,"mtime":1615906942045,"results":"25","hashOfConfig":"22"},{"size":5983,"mtime":1616420038232,"results":"26","hashOfConfig":"22"},{"size":1892,"mtime":1616249745662,"results":"27","hashOfConfig":"22"},{"size":3624,"mtime":1616429850442,"results":"28","hashOfConfig":"22"},{"size":8996,"mtime":1616420024215,"results":"29","hashOfConfig":"22"},{"size":225,"mtime":1612684795214,"results":"30","hashOfConfig":"22"},{"size":165,"mtime":1612859625114,"results":"31","hashOfConfig":"22"},{"size":737,"mtime":1616427836526,"results":"32","hashOfConfig":"22"},{"size":177,"mtime":1612509859912,"results":"33","hashOfConfig":"22"},{"size":159,"mtime":1612505603139,"results":"34","hashOfConfig":"22"},{"size":154,"mtime":1612505611218,"results":"35","hashOfConfig":"22"},{"size":234,"mtime":1612797974278,"results":"36","hashOfConfig":"22"},{"size":352,"mtime":1614954786151,"results":"37","hashOfConfig":"22"},{"size":4623,"mtime":1615545890378,"results":"38","hashOfConfig":"22"},{"size":8114,"mtime":1615960902417,"results":"39","hashOfConfig":"22"},{"size":190,"mtime":1615012388350,"results":"40","hashOfConfig":"22"},{"size":4701,"mtime":1616430380837,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ckqbb4",{"filePath":"45","messages":"46","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\pratik web\\ping\\frontend\\src\\index.js",[],["86","87"],"C:\\pratik web\\ping\\frontend\\src\\App.js",["88","89","90","91","92","93","94"],"C:\\pratik web\\ping\\frontend\\src\\reportWebVitals.js",[],"C:\\pratik web\\ping\\frontend\\src\\components\\Dashboard.js",[],"C:\\pratik web\\ping\\frontend\\src\\components\\Login.js",["95"],"C:\\pratik web\\ping\\frontend\\src\\components\\Landing.js",[],"C:\\pratik web\\ping\\frontend\\src\\components\\Profile.js",["96"],"C:\\pratik web\\ping\\frontend\\src\\components\\Registration.js",[],"C:\\pratik web\\ping\\frontend\\src\\MessageBundle.js",[],"C:\\pratik web\\ping\\frontend\\src\\services\\LoginService.js",[],"C:\\pratik web\\ping\\frontend\\src\\services\\userservice.js",["97"],"C:\\pratik web\\ping\\frontend\\src\\services\\RegistrationService.js",[],"C:\\pratik web\\ping\\frontend\\src\\elements\\Message.js",[],"C:\\pratik web\\ping\\frontend\\src\\elements\\Error.js",[],"C:\\pratik web\\ping\\frontend\\src\\services\\auth-header.js",[],["98","99"],"C:\\pratik web\\ping\\frontend\\src\\services\\SearchService.js",[],"C:\\pratik web\\ping\\frontend\\src\\components\\SearchModal.js",["100","101","102"],"import React, { Component } from 'react';\r\nimport { AddFreind, SearchUser } from '../services/SearchService';\r\nimport UserService from \"../services/userservice\";\r\nimport Modal from 'react-bootstrap/Modal';\r\n\r\nclass SearchModal extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        show: false,\r\n        search: '',\r\n        userdetails:[],\r\n        active_id: null,\r\n        requestedIds: {},\r\n        \r\n    }\r\n\r\n    this.handleShow = this.handleShow.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.onTextboxChangeSearch = this.onTextboxChangeSearch.bind(this);\r\n}\r\n\r\nhandleShow() {\r\n    this.setState({ show: true })\r\n}\r\n\r\nhandleClose(){\r\n    this.setState({ show: false,search:'' })\r\n}\r\n\r\nonTextboxChangeSearch(event) {\r\n  const { value } = event.target;\r\n  this.setState({\r\n    search: value // <-- (1) update state\r\n  });\r\n}\r\n\r\nSearchForUser = async () => { // <-- (3) refactored search function\r\n  const { search, userdetails } = this.state;\r\n  const data = { username: search };\r\n\r\n  const  user  = await SearchUser(data);\r\n  this.setState({ userdetails: user.user });\r\n}\r\n\r\ncomponentDidUpdate(prevProps, prevState) {\r\n  if (prevState.search !== this.state.search) {\r\n    this.SearchForUser(); // <-- (2) search state updated, do search for user\r\n  }\r\n}\r\n\r\nasync handleFreindRequest(elementid){\r\n  const {currentUser} = this.props;\r\n  const curid = currentUser.user._id ;\r\n  console.log(curid)\r\n  const fid = elementid;\r\n  this.setState(prevState =>({ \r\n    active_id: prevState.active_id === fid ? null : fid, // toggle active id\r\n    requestedIds: {\r\n      ...prevState.requestedIds,\r\n      [fid]: fid, // add requested id\r\n    },\r\n  }))\r\n  console.log(fid)\r\n  const data = { \r\n    id: curid,\r\n    fid:fid\r\n  }\r\n  if((JSON.parse(localStorage.getItem('user')).user.friendsList.some(item => item == elementid))){\r\n    console.log(data.fid,elementid)\r\n    return\r\n  }else{\r\n  const AddingFriendtoList = await AddFreind(data);\r\n  console.log(AddingFriendtoList);\r\n  const userdata = await UserService.getUser(curid);\r\n  console.log(userdata);\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n  console.log(user.user.friendsList.push(fid));\r\n  localStorage.setItem('user', JSON.stringify(user));\r\n  }\r\n}\r\n\r\n\r\nrender() {\r\n    let {search,userdetails}= this.state;\r\n    const {currentUser} = this.props;\r\n    return (\r\n       <div>\r\n          <Modal show={this.state.show} onHide={this.handleClose} \r\n          >\r\n             <Modal.Header closeButton>\r\n               <Modal.Title>\r\n                 <input \r\n                  type=\"text\" \r\n                  placeholder=\"Search..\"\r\n                  value={search}\r\n                  onChange={this.onTextboxChangeSearch}\r\n                 ></input>\r\n               </Modal.Title>\r\n             </Modal.Header>\r\n             <Modal.Body>\r\n               <h3>Users</h3>\r\n               <div>\r\n                <ul className=\"collection\">\r\n                  {userdetails.map((element) => {\r\n                    if(currentUser.user.username !== element.username){\r\n                      if((JSON.parse(localStorage.getItem('user')).user.friendsList.some(item => item == element._id))){\r\n                        return(\r\n                        <div key={element._id}>\r\n                          <li>{element.username}<input id={element._id} type=\"button\" value=\"Added\" style = {{backgroundColor:\"yellow\"}}></input></li>\r\n                        </div>\r\n                        )\r\n                      }else{\r\n                        return(\r\n                          <div key={element._id}>\r\n                            <li>{element.username}{' '}<input \r\n                            type=\"button\" \r\n                            id={element._id} \r\n                            onClick={this.handleFreindRequest.bind(this,element._id )} \r\n                            value={this.state.requestedIds[element._id] ? 'Added' : 'Add Friend'}\r\n                            style = {{backgroundColor: ( element._id === this.state.active_id ?  'yellow' : \"white\")}}></input></li>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    }\r\n                    else{\r\n                      return(\r\n                        <div key={element._id}>\r\n                          <li>{element.username}</li>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })}\r\n                </ul>\r\n               </div>\r\n             </Modal.Body>\r\n          </Modal>\r\n        </div>\r\n    )\r\n  }\r\n}\r\nexport default SearchModal;","C:\\pratik web\\ping\\frontend\\src\\components\\Messages.js",["103","104","105"],"import React, { Component } from 'react';\r\nimport { Link,Redirect } from 'react-router-dom';\r\nimport UserService from \"../services/userservice\";\r\nimport {getUsersFriend} from \"../services/messageservice\";\r\nimport io from \"socket.io-client\";\r\nconst SOCKET_IO_URL = \"http://localhost:4000\";\r\n\r\nexport default class Messages extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.socket = io(SOCKET_IO_URL)\r\n        this.state = {\r\n            currentUser: UserService.getCurrentUser(),\r\n            isLoading:false,\r\n            userdetails:[],\r\n            show:false,\r\n            username:'',\r\n            message:'',\r\n            senderusername:'',\r\n            socketConnected:false,\r\n            messages:[]\r\n        };\r\n        this.onTextboxChangeMessage = this.onTextboxChangeMessage.bind(this)\r\n    }\r\n\r\n    componentDidMount(){\r\n        const {currentUser}=this.state\r\n        this.fetchUser()\r\n        this.socket.on('connect',()=> {\r\n            this.setState({ socketConnected : true})\r\n            // console.log(\"connection\")\r\n            this.socket.on('sended',(data)=>{ \r\n                console.log('component did mount',data)\r\n                console.log(this.state.username==data.sendername)\r\n                // if(this.state.username==data.username){\r\n                    console.log(this.state.username,data.username,data.senderusername)\r\n                    this.setState({messages:[...this.state.messages,data]})\r\n                    console.log(this.state.messages)\r\n                // }\r\n                \r\n            })\r\n        })\r\n        // this.scrollToBottom();\r\n        \r\n    }\r\n\r\n    // componentDidUpdate() {\r\n    //     this.scrollToBottom();\r\n    // }\r\n\r\n    async fetchUser(){\r\n        try{\r\n            const {currentUser} = this.state\r\n            console.log(currentUser)\r\n            const data = { userid : currentUser.user._id }\r\n            console.log(data)\r\n            let user = await getUsersFriend(data)\r\n            this.setState({ userdetails: user });\r\n            // console.log(user)\r\n        }catch(err){\r\n            console.log(err)\r\n        }\r\n    }\r\n\r\n    showMessageSpace(elementusername){\r\n        this.setState({\r\n            show: true,\r\n            username:elementusername\r\n        });\r\n        console.log(this.socket.id)\r\n        this.socket.emit('send',{username:elementusername });\r\n    }\r\n\r\n    onTextboxChangeMessage(e){\r\n        this.setState({ message:e.target.value})\r\n    }\r\n\r\n    SendMessage(username,message,senderusername){\r\n        const {messages} =this.state\r\n        if(this.state.socketConnected){\r\n            console.log('if condition test',username,message,senderusername )\r\n            // this.socket.emit('send',{username,message,senderusername,to:this.socket.id });\r\n            // this.socket.emit('send',{username });\r\n            console.log('condition username',`${username}`,  )\r\n            console.log(this.socket.id)\r\n            this.socket.emit('sended',{username,message,senderusername });\r\n            // this.socket.on('sended',(data)=>{ \r\n            //     console.log('component did not mount',data)\r\n            //     // if(data.message.length>0){\r\n            //     // if(this.state.username==data.username){\r\n            //         console.log(this.state.username,data.username,data.senderusername)\r\n            //         this.setState({messages:[...this.state.messages,data]})\r\n            //     // }\r\n                \r\n            // })\r\n            // if(this.state.username==username){\r\n            //     console.log(this.state.username,username)\r\n            // }\r\n            // this.socket.on('sended',(data)=>{ \r\n            //     console.log('component did mount',data.from)\r\n            //     // if(data.message.length>0){\r\n            //     // if(this.state.username==data.username){\r\n            //         console.log(this.state.username,data.username,data.senderusername)\r\n            //         this.setState({messages:[...this.state.messages,data]})\r\n            //     // }\r\n                \r\n            // })\r\n            // this.socket.on(`${username}`, (d)=>{\r\n            //         this.setState({messages:[...messages,d]})\r\n            // })\r\n            // this.socket.on(\"new_msg\",data=> {\r\n            //     console.log(\"private\",data)\r\n            //     this.setState({messages:[...messages,data]})\r\n            //  })\r\n            // this.socket.on(\"message\", (d) => {\r\n            //     this.socket.on(`${this.username}`, (d)=>{\r\n            //         console.log('test from receive username', d)\r\n            //         this.setState({messages:[...messages,d]})\r\n            //     })\r\n            // });\r\n        }\r\n        this.setState( { message:'' })\r\n    }\r\n\r\n    // scrollToBottom() {\r\n    //     const scrollHeight = this.messages.scrollHeight;\r\n    //     const height = this.messages.clientHeight;\r\n    //     const maxScrollTop = scrollHeight - height;\r\n    //     this.messages.scrollTop = maxScrollTop > 0 ? maxScrollTop : 0;\r\n    // }\r\n\r\n    \r\n\r\n    render(){\r\n        const { currentUser ,isLoading,userdetails,message,messages} = this.state;\r\n        console.log(messages)\r\n        if (isLoading) {\r\n            return (<div><p>Loading...</p></div>);\r\n        }\r\n\r\n        if(!currentUser){\r\n            return(\r\n                <div>\r\n                    <Redirect  to='/login' />\r\n                </div>\r\n            )\r\n        }\r\n        else{\r\n        return(\r\n            <div>\r\n                <h1>Messages</h1>\r\n                <div>\r\n                    <p>Users</p>\r\n                    {' '}\r\n                    <ul className=\"collection\">\r\n                        {userdetails.map((element) => {\r\n                            return(\r\n                                <div key={element._id}>\r\n                                    <li><Link to={`/dashboard/profile/:${element._id}`}>{element.username}</Link>{' '}<input \r\n                                    type=\"button\" \r\n                                    id={element._id}\r\n                                    value=\"Message\"\r\n                                    onClick={this.showMessageSpace.bind(this,element.username)} ></input></li>\r\n                                </div>\r\n                            );\r\n                        })\r\n                        }\r\n                    </ul>\r\n                    {' '}\r\n                </div>\r\n                {' '}\r\n                    <Link to=\"/dashboard\">Dashboard</Link>\r\n                {' '}\r\n                <div>\r\n                {\r\n                    this.state.show &&\r\n                    (<div>\r\n                        <h2>Send Message to : {' '}{this.state.username}</h2>\r\n                        {' '}\r\n                        <div className=\"jumbotron\">\r\n                            <h3>Body</h3>\r\n                            <div>\r\n                                <ul>\r\n                                {/* { this.state[`${this.state.username}`]?.map((msg,key) =>{ */}\r\n                                {messages.length > 0 && messages.map((msg,key) =>{\r\n                                    return(<li key={key}>{msg.senderusername}<span>{' '}{msg.message}</span></li>);\r\n                                })\r\n                                }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        {' '}\r\n                        <div>\r\n                            {' '}\r\n                            <input \r\n                            type=\"text\"\r\n                            name=\"message\"\r\n                            value={message}\r\n                            onChange={this.onTextboxChangeMessage}\r\n                            ></input>\r\n                            <button className='btn btn-info' onClick={this.SendMessage.bind(this,this.state.username,this.state.message,currentUser.user.username )}>Send</button>\r\n                        </div>\r\n                        {' '}\r\n                    </div>)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n        }\r\n    }\r\n}","C:\\pratik web\\ping\\frontend\\src\\services\\messageservice.js",[],"C:\\pratik web\\ping\\frontend\\src\\components\\EditProfile.js",["106","107","108"],{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","severity":1,"message":"114","line":2,"column":42,"nodeType":"115","messageId":"116","endLine":2,"endColumn":50},{"ruleId":"117","severity":1,"message":"118","line":20,"column":70,"nodeType":"119","endLine":20,"endColumn":75},{"ruleId":"117","severity":1,"message":"118","line":21,"column":60,"nodeType":"119","endLine":21,"endColumn":65},{"ruleId":"117","severity":1,"message":"118","line":22,"column":68,"nodeType":"119","endLine":22,"endColumn":73},{"ruleId":"117","severity":1,"message":"118","line":23,"column":105,"nodeType":"119","endLine":23,"endColumn":110},{"ruleId":"117","severity":1,"message":"118","line":24,"column":76,"nodeType":"119","endLine":24,"endColumn":81},{"ruleId":"117","severity":1,"message":"118","line":25,"column":114,"nodeType":"119","endLine":25,"endColumn":119},{"ruleId":"113","severity":1,"message":"120","line":126,"column":13,"nodeType":"115","messageId":"116","endLine":126,"endColumn":18},{"ruleId":"121","severity":1,"message":"122","line":97,"column":38,"nodeType":"123","messageId":"124","endLine":97,"endColumn":40},{"ruleId":"113","severity":1,"message":"125","line":3,"column":7,"nodeType":"115","messageId":"116","endLine":3,"endColumn":14},{"ruleId":"109","replacedBy":"126"},{"ruleId":"111","replacedBy":"127"},{"ruleId":"113","severity":1,"message":"128","line":39,"column":19,"nodeType":"115","messageId":"116","endLine":39,"endColumn":30},{"ruleId":"121","severity":1,"message":"122","line":69,"column":83,"nodeType":"123","messageId":"124","endLine":69,"endColumn":85},{"ruleId":"121","severity":1,"message":"122","line":107,"column":103,"nodeType":"123","messageId":"124","endLine":107,"endColumn":105},{"ruleId":"113","severity":1,"message":"129","line":27,"column":16,"nodeType":"115","messageId":"116","endLine":27,"endColumn":27},{"ruleId":"121","severity":1,"message":"122","line":34,"column":48,"nodeType":"123","messageId":"124","endLine":34,"endColumn":50},{"ruleId":"113","severity":1,"message":"130","line":79,"column":16,"nodeType":"115","messageId":"116","endLine":79,"endColumn":24},{"ruleId":"113","severity":1,"message":"131","line":79,"column":40,"nodeType":"115","messageId":"116","endLine":79,"endColumn":43},{"ruleId":"113","severity":1,"message":"132","line":79,"column":44,"nodeType":"115","messageId":"116","endLine":79,"endColumn":52},{"ruleId":"113","severity":1,"message":"133","line":79,"column":53,"nodeType":"115","messageId":"116","endLine":79,"endColumn":63},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'token' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'API_URL' is assigned a value but never used.",["134"],["135"],"'userdetails' is assigned a value but never used.","'currentUser' is assigned a value but never used.","'messages' is assigned a value but never used.","'bio' is assigned a value but never used.","'username' is assigned a value but never used.","'UpdateUser' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]